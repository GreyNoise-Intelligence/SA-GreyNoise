[gnip-command]
syntax = gnip ip="<ip_address>"
description = This command fetches the context information of the given IP address using GreyNoise python SDK.
shortdesc = Retrieves context information about IP from the GreyNoise.
example1 = | gnip ip="<ip_address>"
comment1 = Retrieve the context information of the given ip_address
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = context

[ip_address]
syntax = <string>
description = IP address for which context/noise info needs to be retrieved from GreyNoise

[gnquick-command]
syntax = gnquick ip="<ip_address/comma_separated_ip_addresses>" ip_field="<ip_field>"
description = When IP addresses provided using ip parameter, this command retrieves noise and RIOT status \
              of the given IP addresses and when used with SPL_QUERY with ip_field parameter, this command retrieves \
              noise and RIOT status of IP addresses represented by ip_field using GreyNoise python SDK.
shortdesc = Retrieves noise and RIOT status of the given IP addresses from the GreyNoise.
example1 = | gnquick ip="<ip_address1>,<ip_address2>,<ip_address3>" [OR] SPL_QUERY | gnquick ip_field="<ip_field>"
comment1 = Retrieve the noise and RIOT status for all IPs retrieved from the SPL_QUERY for specified ip_field or retrieve \
           the noise and RIOT status of all the IP addresses as separate events
example2 = | gnquick ip="<ip_address>"
comment2 = Retrieve the noise and RIOT status of the given ip_address
usage = public
appears-in = 2.2.0
maintainer = GreyNoise
tags = quick

[ip_address/comma_separated_ip_addresses]
syntax = <ip_address> | <ip_address>,<ip_address>,<ip_address>

[gnquery-command]
syntax = gnquery query="<GNQL_query>" result_size="<int>" page_size="<int>" exclude_raw=False
description = \
    This command retrieves the results of the given complex GNQL queries using GreyNoise Python SDK.
shortdesc = Retrieves the results of the complex GNQL queries from GreyNoise.
example1 = | gnquery query="<GNQL_query>" result_size="50"
comment1 = Retrieve the results of GNQL_query with maximum 50 results
example2 = | gnquery query="<GNQL_query>"
comment2 = Retrieve the result of GNQL_query with default 1000 results
example3 = | gnquery query="<GNQL_query>" page_size="500"
comment3 = Retrieve the result of GNQL_query with default 1000 results and pulling 500 requests per api request
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = query

[gnstats-command]
syntax = gnstats query="<GNQL_query>" count="<int>"
description = \
    This command fetches the aggregate statistics for the top organizations, actors, tags, ASNs, countries, classifications, \
    and operating systems of all the results for a given GNQL query.
shortdesc = Retrieves aggregation statistics for the top entities for a given GNQL query.
example1 = | gnstats query="<GNQL_query>" count="10"
comment1 = Retrieve aggregate statistics in organizations, actors, tags, ASNs, countries, classifications, and operating systems from the results of the given GNQL_query
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = stats

[GNQL_query]
syntax = <string>
description = GNQL query whose results needs to be retrieved from GreyNoise

[gnmulti-command]
syntax = gnmulti ip_field="<ip_field>"
description = \
    This command retrieves noise and RIOT status of the IP addresses present in the ip_field of each events, \
    and adds the noise and RIOT status information to each event
shortdesc = Retrieves noise and RIOT status of the IP addresses represented by ip_field parameter present in each event, and adds the noise and RIOT information to each event.
example1 = SPL_QUERY | gnmulti ip_field=<ip_field>
category = transforming
appears-in = 2.2.0
maintainer = GreyNoise
usage = public
tags = multi

[gncontext-command]
syntax = gncontext ip="<ip_address>"
description = This command fetches the context information of the given IP address using GreyNoise python SDK.
shortdesc = Retrieves context information about IP from the GreyNoise.
example1 = | gncontext ip="<ip_address>"
comment1 = Retrieve the context information of the given ip_address
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = context

[gnfilter-command]
syntax = gnfilter ip_field="<ip_field>" noise_events="<bool>"
description = \
    This command filters Splunk events returned by given SPL_QUERY based on the noise status \
    of IP address present in ip_field of the events
shortdesc = Filters the events based on the noise status of IP address represented by ip_field.
example1 = SPL_QUERY | gnfilter ip_field="<ip_field>" noise_events="true"
comment1 = Filters the events having ip represented by ip_field and outputs the only events that are having noisy IP addresses.
usage = public
appears-in = 2.2.0
category = transforming
maintainer = GreyNoise
tags = filter

[gnenrich-command]
syntax = gnenrich ip_field="<ip_field>"
description = \
    This command enriches the Splunk events returned by given SPL_QUERY with the context information \
    of IP address represented by ip_field in Splunk Search.
shortdesc = Enriches the Splunk events with the context information of IP address represented by ip_field.
example1 = SPL_QUERY | gnenrich ip_field="<ip_field>"
comment1 = Enriches the events with the context information of the IP address represented by the IP field.
usage = public
appears-in = 2.2.0
category = transforming
maintainer = GreyNoise
tags = enrich

[ip_field]
syntax = <string>
description = Name of the field representing IP address in Splunk events

[gnriot-command]
syntax = gnriot ip="<ip_address>" ip_field="<ip_field>"
description = When IP address provided using ip parameter, this command retrieves RIOT information \
              of the given IP address and when used with SPL_QUERY with ip_field parameter, this command retrieves \
              RIOT information of IP addresses represented by ip_field using GreyNoise python SDK.
shortdesc = Retrieves RIOT information of the given IP address from the GreyNoise.
example1 = | gnriot ip="<ip_address>" [OR] SPL_QUERY | gnriot ip_field="<ip_field>"
comment1 = Retrieve the RIOT information for all IPs retrieved from the SPL_QUERY for specified ip_field or retrieve \
           the RIOT information of the given IP address.
usage = public
appears-in = 2.2.0
maintainer = GreyNoise
tags = riot

[gnipsimilar-command]
syntax = gnipsimilar ip_address="<ip_address>" min_score="<int>" limit="<int>"
description = \
    This command retrieves the list of similar IPs from the GreyNoise IP Similarity tool using the GreyNoise Python SDK.
shortdesc = Retrieves Similarity information of the given IP address from the GreyNoise.
example1 = | gnipsimilar ip="<ip_address>" min_score="90" limit="50"
comment1 = \
    Retrieve the Similarity information for the provided IP with a Similarity score above 90, with a max of 50 results.
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = similar

[gniptimeline-command]
syntax = gniptimeline ip_address="<ip_address>" days="<int>" limit="<int>"
description = \
    This command retrieves the timeline events for the provided IP using GreyNoise Python SDK.
shortdesc = Retrieves the timeline events from GreyNoise.
example1 = | gnquery ip_address="<GNQL_query>" days="30" limit="50"
comment1 = Retrieve the last 30 days of timeline events with maximum 50 results
usage = public
appears-in = 2.2.0
category = generating
maintainer = GreyNoise
tags = timeline
